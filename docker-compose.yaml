
networks:
  laravel:
    driver: bridge

services:
  #server
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/app
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - laravel
  #database
  mysql:
      image: mariadb:10.4.8
      restart: unless-stopped
      container_name: mysql
      tty: true
      ports:
        - "3307:3306"
      environment:
        MYSQL_DATABASE: ${DB_DATABASE:-laravel}
        MYSQL_USER: ${DB_USERNAME:-root}
        MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
        MYSQL_PASSWORD: ${DB_PASSWORD:-laravel}
        SERVICE_NAME: mysql
      volumes:
        - ./mysql/data:/var/lib/mysql
      networks:
        - laravel
  #laravel
  php:
    build:
      context: .
      dockerfile: DockerFile
    environment:
      DB_HOST: mysql  #los host frecuentemente son las mismo el nombre del servicio
      DB_PASSWORD: root
      AP_URL: http://localhost
    container_name: php
    #dar permisos para el usuario www-data, asi laravel podra escribir en el directorio storage
    command: >
      sh -c "
      chown -R www-data:www-data /var/www/app/storage /var/www/app/bootstrap/cache &&
      chmod -R 775 /var/www/app/storage /var/www/app/bootstrap/cache &&
      php-fpm
      "
    ports:
      - "9000:9000"
    volumes:
      - ./:/var/www/app
    networks:
      - laravel

