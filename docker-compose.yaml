
networks:
  ganadex:
    driver: bridge

services:
  #server
  nginx_laravel:
    image: nginx:alpine
    container_name: nginx_laravel
    restart: unless-stopped
    tty: true
    ports:
      - "8081:81"
    volumes:
      - ./:/var/www/app
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
  #database
  mysql:
      image: mariadb:10.5
      restart: unless-stopped
      container_name: mysql
      tty: true
      ports:
        - "3307:3306"
      environment:
        MARIADB_DATABASE: ${DB_DATABASE:-laravel}
        MARIADB_USER: ${DB_USERNAME:-root}
        MARIADB_ROOT_PASSWORD: root #no debe dejar la clave por defecto,en producción debe cambiarse o usar un variable de entorno
        SERVICE_NAME: mysql
      volumes:
        - mysql_ganadex:/var/lib/mysql
  #laravel
  php:
    container_name: ganadex_backend
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      DB_HOST: mysql  #los host frecuentemente son las mismo el nombre del servicio
      APP_URL: http://nginx_laravel
      SESSION_DOMAIN: ganadex_frontend
      SANCTUM_STATEFUL_DOMAINS: ganadex_frontend
      DB_PASSWORD: root
    ports:
      - "9000:9000"
      #se ejecuta un clear de la config para volve a generar la config, ya que en la contruccion no estan estas variables
    #variables dinamicas como el dominio de la aplicacion, db host, se obtienen al levantar el contenedor
    #se debe eliminar la cache de la configuracion para que se actualicen las variables dinamicas
    #se ejecuta el comando php-fpm para mantener el contenedor en ejecución:
    command: >
      sh -c "php artisan config:clear &&
        php artisan config:cache && php-fpm"

    depends_on:
      - mysql

volumes:
  mysql_ganadex:
